{
  "name": "local",
  "version": "0.1.0",
  "private": true,
  "engines": {
    "node": "18"
  },
  "devDependencies": {
    "@babel/core": "^7.25.2",
    "@babel/plugin-proposal-private-property-in-object": "^7.21.11",
    "@babel/preset-env": "^7.25.3",
    "@babel/preset-react": "^7.24.7",
    "@babel/runtime": "^7.25.0",
    "@pmmmwh/react-refresh-webpack-plugin": "^0.5.15",
    "@react-buddy/ide-toolbox": "^2.4.0",
    "@svgr/webpack": "^8.1.0",
    "@testing-library/jest-dom": "^6.4.8",
    "@testing-library/react": "^16.0.0",
    "@typescript-eslint/parser": "^8.1.0",
    "babel-jest": "^29.7.0",
    "babel-loader": "^9.1.3",
    "babel-plugin-named-asset-import": "^0.3.8",
    "bfj": "^8.0.0",
    "browserslist": "^4.23.3",
    "camelcase": "^8.0.0",
    "case-sensitive-paths-webpack-plugin": "^2.4.0",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "css-loader": "^7.1.2",
    "css-minimizer-webpack-plugin": "^7.0.0",
    "dotenv": "^16.4.5",
    "dotenv-expand": "^11.0.6",
    "eslint": "^8.57.0",
    "eslint-config-react-app": "^7.0.1",
    "eslint-webpack-plugin": "^4.2.0",
    "file-loader": "^6.2.0",
    "fs-extra": "^11.2.0",
    "html-webpack-plugin": "^5.6.0",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-resolve": "^29.7.0",
    "jest-watch-typeahead": "^2.2.2",
    "mini-css-extract-plugin": "^2.9.0",
    "postcss": "^8.4.41",
    "postcss-flexbugs-fixes": "^5.0.2",
    "postcss-loader": "^8.1.1",
    "postcss-normalize": "^10.0.1",
    "postcss-preset-env": "^10.0.2",
    "prompts": "^2.4.2",
    "resolve": "^1.22.8",
    "resolve-url-loader": "^5.0.0",
    "sass-loader": "^16.0.0",
    "semver": "^7.6.3",
    "slick-carousel": "^1.8.1",
    "source-map-loader": "^5.0.0",
    "style-loader": "^4.0.0",
    "tailwindcss": "^3.4.10",
    "terser-webpack-plugin": "^5.3.10",
    "web-vitals": "^4.2.3",
    "webpack": "^5.94.0",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^5.0.4",
    "webpack-manifest-plugin": "^5.0.0",
    "workbox-webpack-plugin": "^7.1.0"
  },
  "dependencies": {
    "@fortawesome/free-solid-svg-icons": "^6.6.0",
    "@fortawesome/react-fontawesome": "^0.2.2",
    "@sentry/cli": "^2.33.1",
    "@sentry/react": "^8.26.0",
    "axios": "^1.7.4",
    "babel-preset-react-app": "^10.0.1",
    "bootstrap": "^5.3.3",
    "commentbox.io": "^2.1.0",
    "firebase": "^10.13.0",
    "htmlparser2": "^9.1.0",
    "i18next": "^23.14.0",
    "i18next-browser-languagedetector": "^8.0.0",
    "i18next-http-backend": "^2.6.0",
    "quill-image-uploader": "^1.3.0",
    "react-app-polyfill": "^3.0.0",
    "react-bootstrap": "^2.10.4",
    "react-dev-utils": "^12.0.1",
    "react-helmet": "^6.1.0",
    "react-helmet-async": "^2.0.5",
    "react-hot-toast": "^2.4.1",
    "react-i18next": "^15.0.1",
    "react-lazy-load-image-component": "^1.6.2",
    "react-quill": "^2.0.0",
    "react-refresh": "^0.14.2",
    "react-router-dom": "^6.26.1",
    "react-share": "^5.1.0",
    "react-slick": "^0.30.2"
  },
  "scripts": {
    "start": "export $(cat .env | xargs)&&cross-env REACT_APP_USE_EMULATORS=${REACT_APP_USE_EMULATORS:-false} && if [ \"$REACT_APP_USE_EMULATORS\" = \"true\" ]; then concurrently --kill-others-on-fail \"npm run emulators\" \"node scripts/start.js \"; else node scripts/start.js ; fi",
    "build": "node scripts/build.js && npm run sentry:sourcemaps",
    "test": "node scripts/test.js",
    "postbuild": "node modify-index.js",
    "emulators": "firebase emulators:start --project heavy-local-12bc4 --import=./emulatorMetadata --export-on-exit=./emulatorMetadata",
    "deploy": "firebase deploy --project heavy-local-12bc4",
    "initialize-emulators": "unzip ./emulatorMetadata.zip",
    "prebuild": "./update_env.sh",
    "sentry:sourcemaps": "export $(cat .env | xargs) && sentry-cli releases new --org orfanidis-q5 --project javascript-react $REACT_APP_RELEASE && sentry-cli releases files $REACT_APP_RELEASE upload-sourcemaps ./build --rewrite --project javascript-react && sentry-cli releases finalize $REACT_APP_RELEASE && sentry-cli releases set-commits $REACT_APP_RELEASE --auto"
  },
  "eslintConfig": {
    "parser": "@typescript-eslint/parser",
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "jest": {
    "roots": [
      "<rootDir>/src"
    ],
    "collectCoverageFrom": [
      "src/**/*.{js,jsx,ts,tsx}",
      "!src/**/*.d.ts"
    ],
    "setupFiles": [
      "react-app-polyfill/jsdom"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/src/setupTests.js"
    ],
    "testMatch": [
      "<rootDir>/src/**/__tests__/**/*.{js,jsx,ts,tsx}",
      "<rootDir>/src/**/*.{spec,test}.{js,jsx,ts,tsx}"
    ],
    "testEnvironment": "jsdom",
    "transform": {
      "^.+\\.(js|jsx|mjs|cjs|ts|tsx)$": "<rootDir>/config/jest/babelTransform.js",
      "^.+\\.css$": "<rootDir>/config/jest/cssTransform.js",
      "^(?!.*\\.(js|jsx|mjs|cjs|ts|tsx|css|json)$)": "<rootDir>/config/jest/fileTransform.js"
    },
    "transformIgnorePatterns": [
      "[/\\\\]node_modules[/\\\\].+\\.(js|jsx|mjs|cjs|ts|tsx)$",
      "^.+\\.module\\.(css|sass|scss)$"
    ],
    "modulePaths": [],
    "moduleNameMapper": {
      "^react-native$": "react-native-web",
      "^.+\\.module\\.(css|sass|scss)$": "identity-obj-proxy"
    },
    "moduleFileExtensions": [
      "web.js",
      "js",
      "web.ts",
      "ts",
      "web.tsx",
      "tsx",
      "json",
      "web.jsx",
      "jsx",
      "node"
    ],
    "watchPlugins": [
      "jest-watch-typeahead/filename",
      "jest-watch-typeahead/testname"
    ],
    "resetMocks": true
  },
  "babel": {
    "presets": [
      "react-app"
    ]
  }
}
